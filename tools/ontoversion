#!/usr/bin/env python3
"""Prints version of an ontology to standard output.

This script uses rdflib and the versionIRI tag on an ontology to infer
the version.
"""
import argparse
import sys

import rdflib
from rdflib.exceptions import ParserError
from xml.parsers.expat import ExpatError
from xml.sax._exceptions import SAXParseException

from ontopy.utils import infer_version


def main():
    """Main run function."""
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument(
        "iri",
        metavar="IRI",
        help="IRI/file to OWL source to extract the version from.",
    )
    parser.add_argument(
        "--format", "-f", default="ttl", help='OWL format. Default is "ttl".'
    )
    try:
        args = parser.parse_args()
    except SystemExit as exc:
        sys.exit(exc.code)  # Exit without traceback on invalid arguments

    # Extract base IRI and versionIRI
    graph = rdflib.Graph()
    try:
        graph.parse(args.iri.rstrip("/#"), format=args.format)
    except [ExpatError, SAXParseException] as err:
        print(
            "rdflib could not parse the ontology, check format. "
            "Default format is ´ttl´."
        )
        print(err)
        sys.exit()
    iri, version_iri = list(
        graph.subject_objects(
            rdflib.URIRef("http://www.w3.org/2002/07/owl#versionIRI")
        )
    )[0]

    # Infer version from IRI and versionIRI
    version = infer_version(iri, version_iri)

    print(version)


if __name__ == "__main__":
    main()
